// Code generated by Kitex v0.11.3. DO NOT EDIT.

package educationservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	education "github.com/cylScripter/openapi/education"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	CreateApp(ctx context.Context, req *education.CreateAppReq, callOptions ...callopt.Option) (r *education.CreateAppResp, err error)
	Login(ctx context.Context, req *education.LoginReq, callOptions ...callopt.Option) (r *education.LoginResp, err error)
	CreateUser(ctx context.Context, req *education.CreateUserReq, callOptions ...callopt.Option) (r *education.CreateUserResp, err error)
	CreateRole(ctx context.Context, req *education.CreateRoleReq, callOptions ...callopt.Option) (r *education.CreateRoleResp, err error)
	DeleteUser(ctx context.Context, req *education.DeleteUserReq, callOptions ...callopt.Option) (r *education.DeleteUserResp, err error)
	GetUserList(ctx context.Context, req *education.GetUserListReq, callOptions ...callopt.Option) (r *education.GetUserListResp, err error)
	GetRoleList(ctx context.Context, req *education.GetRoleListReq, callOptions ...callopt.Option) (r *education.GetRoleListResp, err error)
	CreatePermission(ctx context.Context, req *education.CreatePermissionReq, callOptions ...callopt.Option) (r *education.CreatePermissionResp, err error)
	GetPermissionList(ctx context.Context, req *education.GetPermissionListReq, callOptions ...callopt.Option) (r *education.GetPermissionListResp, err error)
	GetMenu(ctx context.Context, req *education.GetMenuReq, callOptions ...callopt.Option) (r *education.GetMenuResp, err error)
	GetMenuList(ctx context.Context, req *education.GetMenuListReq, callOptions ...callopt.Option) (r *education.GetMenuListResp, err error)
	GetUserInfo(ctx context.Context, req *education.GetUserInfoReq, callOptions ...callopt.Option) (r *education.GetUserInfoResp, err error)
	GetAuthCode(ctx context.Context, req *education.GetAuthCodeReq, callOptions ...callopt.Option) (r *education.GetAuthCodeResp, err error)
	SetUserRole(ctx context.Context, req *education.SetUserRoleReq, callOptions ...callopt.Option) (r *education.SetUserRoleResp, err error)
	SetRolePermission(ctx context.Context, req *education.SetRolePermissionReq, callOptions ...callopt.Option) (r *education.SetRolePermissionResp, err error)
	SetRoleMenu(ctx context.Context, req *education.SetRoleMenuReq, callOptions ...callopt.Option) (r *education.SetRoleMenuResp, err error)
	CreateMenu(ctx context.Context, req *education.CreateMenuReq, callOptions ...callopt.Option) (r *education.CreateMenuResp, err error)
	CreateOffice(ctx context.Context, req *education.CreateOfficeReq, callOptions ...callopt.Option) (r *education.CreateOfficeResp, err error)
	GetOfficeList(ctx context.Context, req *education.GetOfficeListReq, callOptions ...callopt.Option) (r *education.GetOfficeListResp, err error)
	GetClassList(ctx context.Context, req *education.GetClassListReq, callOptions ...callopt.Option) (r *education.GetClassListResp, err error)
	ImportCourseApply(ctx context.Context, req *education.ImportCourseApplyReq, callOptions ...callopt.Option) (r *education.ImportCourseApplyResp, err error)
	GetCourseApplyList(ctx context.Context, req *education.GetCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetCourseApplyListResp, err error)
	GetSelfCourseApplyList(ctx context.Context, req *education.GetSelfCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseApplyListResp, err error)
	ImportUser(ctx context.Context, req *education.ImportUserReq, callOptions ...callopt.Option) (r *education.ImportUserResp, err error)
	DeleteCourseApply(ctx context.Context, req *education.DeleteCourseApplyReq, callOptions ...callopt.Option) (r *education.DeleteCourseApplyResp, err error)
	ApproveCourseApply(ctx context.Context, req *education.ApproveCourseApplyReq, callOptions ...callopt.Option) (r *education.ApproveCourseApplyResp, err error)
	ResetCourseApply(ctx context.Context, req *education.ResetCourseApplyReq, callOptions ...callopt.Option) (r *education.ResetCourseApplyResp, err error)
	FillCourseApply(ctx context.Context, req *education.FillCourseApplyReq, callOptions ...callopt.Option) (r *education.FillCourseApplyResp, err error)
	ExportSelfCheckTable(ctx context.Context, req *education.ExportSelfCheckTableReq, callOptions ...callopt.Option) (r *education.ExportSelfCheckTableResp, err error)
	ExportResponsibility(ctx context.Context, req *education.ExportResponsibilityReq, callOptions ...callopt.Option) (r *education.ExportResponsibilityResp, err error)
	ExportAllSelfCheckTable(ctx context.Context, req *education.ExportAllSelfCheckTableReq, callOptions ...callopt.Option) (r *education.ExportAllSelfCheckTableResp, err error)
	UpdateCourseApply(ctx context.Context, req *education.UpdateCourseApplyReq, callOptions ...callopt.Option) (r *education.UpdateCourseApplyResp, err error)
	ExportCourseApply(ctx context.Context, req *education.ExportCourseApplyReq, callOptions ...callopt.Option) (r *education.ExportCourseApplyResp, err error)
	ExportCourseApplySummary(ctx context.Context, req *education.ExportCourseApplySummaryReq, callOptions ...callopt.Option) (r *education.ExportCourseApplySummaryResp, err error)
	OneKeyApproveCourseApply(ctx context.Context, req *education.OneKeyApproveCourseApplyReq, callOptions ...callopt.Option) (r *education.OneKeyApproveCourseApplyResp, err error)
	GetSelectData(ctx context.Context, req *education.GetSelectDataReq, callOptions ...callopt.Option) (r *education.GetSelectDataResp, err error)
	GetTeacherInfoList(ctx context.Context, req *education.GetTeacherInfoListReq, callOptions ...callopt.Option) (r *education.GetTeacherInfoListResp, err error)
	ImportTeacherInfo(ctx context.Context, req *education.ImportTeacherInfoReq, callOptions ...callopt.Option) (r *education.ImportTeacherInfoResp, err error)
	UpdateTeacherInfo(ctx context.Context, req *education.UpdateTeacherInfoReq, callOptions ...callopt.Option) (r *education.UpdateTeacherInfoResp, err error)
	SetTeacherInfoStatus(ctx context.Context, req *education.SetTeacherInfoStatusReq, callOptions ...callopt.Option) (r *education.SetTeacherInfoStatusResp, err error)
	OderTeacherInfo(ctx context.Context, req *education.OrderTeacherInfoReq, callOptions ...callopt.Option) (r *education.OrderTeacherInfoResp, err error)
	UpdateMenu(ctx context.Context, req *education.UpdateMenuReq, callOptions ...callopt.Option) (r *education.UpdateMenuResp, err error)
	DeleteMenu(ctx context.Context, req *education.DeleteMenuReq, callOptions ...callopt.Option) (r *education.DeleteMenuResp, err error)
	GetToken(ctx context.Context, req *education.GetTokenReq, callOptions ...callopt.Option) (r *education.GetTokenResp, err error)
	UpdateRole(ctx context.Context, req *education.UpdateRoleReq, callOptions ...callopt.Option) (r *education.UpdateRoleResp, err error)
	SetRoleStatus(ctx context.Context, req *education.SetRoleStatusReq, callOptions ...callopt.Option) (r *education.SetRoleStatusResp, err error)
	DeleteRole(ctx context.Context, req *education.DeleteRoleReq, callOptions ...callopt.Option) (r *education.DeleteRoleResp, err error)
	DeleteOffice(ctx context.Context, req *education.DeleteOfficeReq, callOptions ...callopt.Option) (r *education.DeleteOfficeResp, err error)
	UpdateOffice(ctx context.Context, req *education.UpdateOfficeReq, callOptions ...callopt.Option) (r *education.UpdateOfficeResp, err error)
	UpdateUser(ctx context.Context, req *education.UpdateUserReq, callOptions ...callopt.Option) (r *education.UpdateUserResp, err error)
	ResetPassword(ctx context.Context, req *education.ResetPasswordReq, callOptions ...callopt.Option) (r *education.ResetPasswordResp, err error)
	DeleteTeacherInfo(ctx context.Context, req *education.DeleteTeacherInfoReq, callOptions ...callopt.Option) (r *education.DeleteTeacherInfoResp, err error)
	CreateTeacherInfo(ctx context.Context, req *education.CreateTeacherInfoReq, callOptions ...callopt.Option) (r *education.CreateTeacherInfoResp, err error)
	ExportTeacherInfo(ctx context.Context, req *education.ExportTeacherInfoReq, callOptions ...callopt.Option) (r *education.ExportTeacherInfoResp, err error)
	GetCourseList(ctx context.Context, req *education.GetCourseListReq, callOptions ...callopt.Option) (r *education.GetCourseListResp, err error)
	DeleteCourse(ctx context.Context, req *education.DeleteCourseReq, callOptions ...callopt.Option) (r *education.DeleteCourseResp, err error)
	ImportCourse(ctx context.Context, req *education.ImportCourseReq, callOptions ...callopt.Option) (r *education.ImportCourseResp, err error)
	UpdateCourse(ctx context.Context, req *education.UpdateCourseReq, callOptions ...callopt.Option) (r *education.UpdateCourseResp, err error)
	GetSelfCourseList(ctx context.Context, req *education.GetSelfCourseListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseListResp, err error)
	GetCourseApplicationList(ctx context.Context, req *education.GetCourseApplicationListReq, callOptions ...callopt.Option) (r *education.GetCourseApplicationListResp, err error)
	DeleteCourseApplication(ctx context.Context, req *education.DeleteCourseApplicationReq, callOptions ...callopt.Option) (r *education.DeleteCourseApplicationResp, err error)
	GetSelfCourseApplicationList(ctx context.Context, req *education.GetSelfCourseApplicationListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseApplicationListResp, err error)
	AdjustCourseApplication(ctx context.Context, req *education.AdjustCourseApplicationReq, callOptions ...callopt.Option) (r *education.AdjustCourseApplicationResp, err error)
	GetHolidayList(ctx context.Context, req *education.GetHolidayListReq, callOptions ...callopt.Option) (r *education.GetHolidayListResp, err error)
	DeleteHoliday(ctx context.Context, req *education.DeleteHolidayReq, callOptions ...callopt.Option) (r *education.DeleteHolidayResp, err error)
	CreateHoliday(ctx context.Context, req *education.CreateHolidayReq, callOptions ...callopt.Option) (r *education.CreateHolidayResp, err error)
	UpdateHoliday(ctx context.Context, req *education.UpdateHolidayReq, callOptions ...callopt.Option) (r *education.UpdateHolidayResp, err error)
	GetInternshipList(ctx context.Context, req *education.GetInternshipListReq, callOptions ...callopt.Option) (r *education.GetInternshipListResp, err error)
	DeleteInternship(ctx context.Context, req *education.DeleteInternshipReq, callOptions ...callopt.Option) (r *education.DeleteInternshipResp, err error)
	UpdateInternship(ctx context.Context, req *education.UpdateInternshipReq, callOptions ...callopt.Option) (r *education.UpdateInternshipResp, err error)
	CreateInternship(ctx context.Context, req *education.CreateInternshipReq, callOptions ...callopt.Option) (r *education.CreateInternshipResp, err error)
	ImportInternship(ctx context.Context, req *education.ImportInternshipReq, callOptions ...callopt.Option) (r *education.ImportInternshipResp, err error)
	GetTrainingCourseList(ctx context.Context, req *education.GetTrainingCourseListReq, callOptions ...callopt.Option) (r *education.GetTrainingCourseListResp, err error)
	CreateTrainingCourse(ctx context.Context, req *education.CreateTrainingCourseReq, callOptions ...callopt.Option) (r *education.CreateTrainingCourseResp, err error)
	DeleteTrainingCourse(ctx context.Context, req *education.DeleteTrainingCourseReq, callOptions ...callopt.Option) (r *education.DeleteTrainingCourseResp, err error)
	UpdateTrainingCourse(ctx context.Context, req *education.UpdateTrainingCourseReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseResp, err error)
	UpdateTrainingCourseTeacher(ctx context.Context, req *education.UpdateTrainingCourseTeacherReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseTeacherResp, err error)
	ImportTrainingCourse(ctx context.Context, req *education.ImportTrainingCourseReq, callOptions ...callopt.Option) (r *education.ImportTrainingCourseResp, err error)
	GetSelfTrainingCourseList(ctx context.Context, req *education.GetSelfTrainingCourseListReq, callOptions ...callopt.Option) (r *education.GetSelfTrainingCourseListResp, err error)
	SyncFinalExam(ctx context.Context, req *education.SyncFinalExamReq, callOptions ...callopt.Option) (r *education.SyncFinalExamResp, err error)
	GetFinalExamList(ctx context.Context, req *education.GetFinalExamListReq, callOptions ...callopt.Option) (r *education.GetFinalExamListResp, err error)
	GetFinalExamSubjectList(ctx context.Context, req *education.GetFinalExamSubjectListReq, callOptions ...callopt.Option) (r *education.GetFinalExamSubjectListResp, err error)
	UpdateFinalExam(ctx context.Context, req *education.UpdateFinalExamReq, callOptions ...callopt.Option) (r *education.UpdateFinalExamResp, err error)
	ExportFinalExam(ctx context.Context, req *education.ExportFinalExamReq, callOptions ...callopt.Option) (r *education.ExportFinalExamResp, err error)
	CalculateFinalExamWorkload(ctx context.Context, req *education.CalculateFinalExamWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateFinalExamWorkloadResp, err error)
	DeleteFinalExam(ctx context.Context, req *education.DeleteFinalExamReq, callOptions ...callopt.Option) (r *education.DeleteFinalExamResp, err error)
	FillFinalExamPaper(ctx context.Context, req *education.FillFinalExamPaperReq, callOptions ...callopt.Option) (r *education.FillFinalExamPaperResp, err error)
	GetFinalExamFillRecordList(ctx context.Context, req *education.GetFinalExamRecordListReq, callOptions ...callopt.Option) (r *education.GetFinalExamRecordListResp, err error)
	DeleteFinalExamRecord(ctx context.Context, req *education.DeleteFinalExamRecordReq, callOptions ...callopt.Option) (r *education.DeleteFinalExamRecordResp, err error)
	UpdateFinalExamRecord(ctx context.Context, req *education.UpdateFinalExamRecordReq, callOptions ...callopt.Option) (r *education.UpdateFinalExamRecordResp, err error)
	GetFinalExamClassList(ctx context.Context, req *education.GetFinalExamClassListReq, callOptions ...callopt.Option) (r *education.GetFinalExamClassListResp, err error)
	GetBeginExamList(ctx context.Context, req *education.GetBeginExamListReq, callOptions ...callopt.Option) (r *education.GetBeginExamListResp, err error)
	UpdateBeginExam(ctx context.Context, req *education.UpdateBeginExamReq, callOptions ...callopt.Option) (r *education.UpdateBeginExamResp, err error)
	CreateBeginExam(ctx context.Context, req *education.CreateBeginExamReq, callOptions ...callopt.Option) (r *education.CreateBeginExamResp, err error)
	DeleteBeginExam(ctx context.Context, req *education.DeleteBeginExamReq, callOptions ...callopt.Option) (r *education.DeleteBeginExamResp, err error)
	ImportBeginExam(ctx context.Context, req *education.ImportBeginExamReq, callOptions ...callopt.Option) (r *education.ImportBeginExamResp, err error)
	GetRoleMenu(ctx context.Context, req *education.GetRoleMenuReq, callOptions ...callopt.Option) (r *education.GetRoleMenuResp, err error)
	UploadSign(ctx context.Context, req *education.UploadSignReq, callOptions ...callopt.Option) (r *education.UploadSignResp, err error)
	GetDepartmentCourseApplyList(ctx context.Context, req *education.GetDepartmentCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetDepartmentCourseApplyListResp, err error)
	UpdatePassword(ctx context.Context, req *education.UpdatePasswordReq, callOptions ...callopt.Option) (r *education.UpdatePasswordResp, err error)
	GetUserSign(ctx context.Context, req *education.GetUserSignReq, callOptions ...callopt.Option) (r *education.GetUserSignResp, err error)
	ExportAllResponsibility(ctx context.Context, req *education.ExportAllResponsibilityReq, callOptions ...callopt.Option) (r *education.ExportAllResponsibilityResp, err error)
	GetWorkloadStatisticsRecordList(ctx context.Context, req *education.GetWorkloadStatisticsRecordListReq, callOptions ...callopt.Option) (r *education.GetWorkloadStatisticsRecordListResp, err error)
	DeleteWorkloadStatisticsRecord(ctx context.Context, req *education.DeleteWorkloadStatisticsRecordReq, callOptions ...callopt.Option) (r *education.DeleteWorkloadStatisticsRecordResp, err error)
	UpdateWorkloadStatisticsRecord(ctx context.Context, req *education.UpdateWorkloadStatisticsRecordReq, callOptions ...callopt.Option) (r *education.UpdateWorkloadStatisticsRecordResp, err error)
	CalculateTheoreticalCourseWorkload(ctx context.Context, req *education.CalculateTheoreticalCourseWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateTheoreticalCourseWorkloadResp, err error)
	CalculateTrainingCourseWorkload(ctx context.Context, req *education.CalculateTrainingCourseWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateTrainingCourseWorkloadResp, err error)
	CalculateInternshipWorkload(ctx context.Context, req *education.CalculateInternshipWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateInternshipWorkloadResp, err error)
	CalculateBeginExamWorkload(ctx context.Context, req *education.CalculateBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateBeginExamWorkloadResp, err error)
	GetWorkloadStatisticsList(ctx context.Context, req *education.GetWorkloadStatisticsListReq, callOptions ...callopt.Option) (r *education.GetWorkloadStatisticsListResp, err error)
	DeleteWorkloadStatistics(ctx context.Context, req *education.DeleteWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.DeleteWorkloadStatisticsResp, err error)
	ExportWorkloadStatistics(ctx context.Context, req *education.ExportWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.ExportWorkloadStatisticsResp, err error)
	UpdateTheoreticalCourseWorkload(ctx context.Context, req *education.UpdateTheoreticalCourseWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateTheoreticalCourseWorkloadResp, err error)
	UpdateTrainingCourseWorkload(ctx context.Context, req *education.UpdateTrainingCourseWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseWorkloadResp, err error)
	UpdateInternshipWorkload(ctx context.Context, req *education.UpdateInternshipWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateInternshipWorkloadResp, err error)
	UpdateBeginExamWorkload(ctx context.Context, req *education.UpdateBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateBeginExamWorkloadResp, err error)
	ExportBeginExamWorkload(ctx context.Context, req *education.ExportBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.ExportBeginExamWorkloadResp, err error)
	CreateWorkloadStatistics(ctx context.Context, req *education.CreateWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.CreateWorkloadStatisticsResp, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfoForClient(), options...)
	if err != nil {
		return nil, err
	}
	return &kEducationserviceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kEducationserviceClient struct {
	*kClient
}

func (p *kEducationserviceClient) CreateApp(ctx context.Context, req *education.CreateAppReq, callOptions ...callopt.Option) (r *education.CreateAppResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateApp(ctx, req)
}

func (p *kEducationserviceClient) Login(ctx context.Context, req *education.LoginReq, callOptions ...callopt.Option) (r *education.LoginResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.Login(ctx, req)
}

func (p *kEducationserviceClient) CreateUser(ctx context.Context, req *education.CreateUserReq, callOptions ...callopt.Option) (r *education.CreateUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateUser(ctx, req)
}

func (p *kEducationserviceClient) CreateRole(ctx context.Context, req *education.CreateRoleReq, callOptions ...callopt.Option) (r *education.CreateRoleResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateRole(ctx, req)
}

func (p *kEducationserviceClient) DeleteUser(ctx context.Context, req *education.DeleteUserReq, callOptions ...callopt.Option) (r *education.DeleteUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteUser(ctx, req)
}

func (p *kEducationserviceClient) GetUserList(ctx context.Context, req *education.GetUserListReq, callOptions ...callopt.Option) (r *education.GetUserListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserList(ctx, req)
}

func (p *kEducationserviceClient) GetRoleList(ctx context.Context, req *education.GetRoleListReq, callOptions ...callopt.Option) (r *education.GetRoleListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetRoleList(ctx, req)
}

func (p *kEducationserviceClient) CreatePermission(ctx context.Context, req *education.CreatePermissionReq, callOptions ...callopt.Option) (r *education.CreatePermissionResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreatePermission(ctx, req)
}

func (p *kEducationserviceClient) GetPermissionList(ctx context.Context, req *education.GetPermissionListReq, callOptions ...callopt.Option) (r *education.GetPermissionListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetPermissionList(ctx, req)
}

func (p *kEducationserviceClient) GetMenu(ctx context.Context, req *education.GetMenuReq, callOptions ...callopt.Option) (r *education.GetMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetMenu(ctx, req)
}

func (p *kEducationserviceClient) GetMenuList(ctx context.Context, req *education.GetMenuListReq, callOptions ...callopt.Option) (r *education.GetMenuListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetMenuList(ctx, req)
}

func (p *kEducationserviceClient) GetUserInfo(ctx context.Context, req *education.GetUserInfoReq, callOptions ...callopt.Option) (r *education.GetUserInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserInfo(ctx, req)
}

func (p *kEducationserviceClient) GetAuthCode(ctx context.Context, req *education.GetAuthCodeReq, callOptions ...callopt.Option) (r *education.GetAuthCodeResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetAuthCode(ctx, req)
}

func (p *kEducationserviceClient) SetUserRole(ctx context.Context, req *education.SetUserRoleReq, callOptions ...callopt.Option) (r *education.SetUserRoleResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SetUserRole(ctx, req)
}

func (p *kEducationserviceClient) SetRolePermission(ctx context.Context, req *education.SetRolePermissionReq, callOptions ...callopt.Option) (r *education.SetRolePermissionResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SetRolePermission(ctx, req)
}

func (p *kEducationserviceClient) SetRoleMenu(ctx context.Context, req *education.SetRoleMenuReq, callOptions ...callopt.Option) (r *education.SetRoleMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SetRoleMenu(ctx, req)
}

func (p *kEducationserviceClient) CreateMenu(ctx context.Context, req *education.CreateMenuReq, callOptions ...callopt.Option) (r *education.CreateMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateMenu(ctx, req)
}

func (p *kEducationserviceClient) CreateOffice(ctx context.Context, req *education.CreateOfficeReq, callOptions ...callopt.Option) (r *education.CreateOfficeResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateOffice(ctx, req)
}

func (p *kEducationserviceClient) GetOfficeList(ctx context.Context, req *education.GetOfficeListReq, callOptions ...callopt.Option) (r *education.GetOfficeListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetOfficeList(ctx, req)
}

func (p *kEducationserviceClient) GetClassList(ctx context.Context, req *education.GetClassListReq, callOptions ...callopt.Option) (r *education.GetClassListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetClassList(ctx, req)
}

func (p *kEducationserviceClient) ImportCourseApply(ctx context.Context, req *education.ImportCourseApplyReq, callOptions ...callopt.Option) (r *education.ImportCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportCourseApply(ctx, req)
}

func (p *kEducationserviceClient) GetCourseApplyList(ctx context.Context, req *education.GetCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetCourseApplyListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetCourseApplyList(ctx, req)
}

func (p *kEducationserviceClient) GetSelfCourseApplyList(ctx context.Context, req *education.GetSelfCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseApplyListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSelfCourseApplyList(ctx, req)
}

func (p *kEducationserviceClient) ImportUser(ctx context.Context, req *education.ImportUserReq, callOptions ...callopt.Option) (r *education.ImportUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportUser(ctx, req)
}

func (p *kEducationserviceClient) DeleteCourseApply(ctx context.Context, req *education.DeleteCourseApplyReq, callOptions ...callopt.Option) (r *education.DeleteCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteCourseApply(ctx, req)
}

func (p *kEducationserviceClient) ApproveCourseApply(ctx context.Context, req *education.ApproveCourseApplyReq, callOptions ...callopt.Option) (r *education.ApproveCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ApproveCourseApply(ctx, req)
}

func (p *kEducationserviceClient) ResetCourseApply(ctx context.Context, req *education.ResetCourseApplyReq, callOptions ...callopt.Option) (r *education.ResetCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ResetCourseApply(ctx, req)
}

func (p *kEducationserviceClient) FillCourseApply(ctx context.Context, req *education.FillCourseApplyReq, callOptions ...callopt.Option) (r *education.FillCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FillCourseApply(ctx, req)
}

func (p *kEducationserviceClient) ExportSelfCheckTable(ctx context.Context, req *education.ExportSelfCheckTableReq, callOptions ...callopt.Option) (r *education.ExportSelfCheckTableResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportSelfCheckTable(ctx, req)
}

func (p *kEducationserviceClient) ExportResponsibility(ctx context.Context, req *education.ExportResponsibilityReq, callOptions ...callopt.Option) (r *education.ExportResponsibilityResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportResponsibility(ctx, req)
}

func (p *kEducationserviceClient) ExportAllSelfCheckTable(ctx context.Context, req *education.ExportAllSelfCheckTableReq, callOptions ...callopt.Option) (r *education.ExportAllSelfCheckTableResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportAllSelfCheckTable(ctx, req)
}

func (p *kEducationserviceClient) UpdateCourseApply(ctx context.Context, req *education.UpdateCourseApplyReq, callOptions ...callopt.Option) (r *education.UpdateCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateCourseApply(ctx, req)
}

func (p *kEducationserviceClient) ExportCourseApply(ctx context.Context, req *education.ExportCourseApplyReq, callOptions ...callopt.Option) (r *education.ExportCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportCourseApply(ctx, req)
}

func (p *kEducationserviceClient) ExportCourseApplySummary(ctx context.Context, req *education.ExportCourseApplySummaryReq, callOptions ...callopt.Option) (r *education.ExportCourseApplySummaryResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportCourseApplySummary(ctx, req)
}

func (p *kEducationserviceClient) OneKeyApproveCourseApply(ctx context.Context, req *education.OneKeyApproveCourseApplyReq, callOptions ...callopt.Option) (r *education.OneKeyApproveCourseApplyResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.OneKeyApproveCourseApply(ctx, req)
}

func (p *kEducationserviceClient) GetSelectData(ctx context.Context, req *education.GetSelectDataReq, callOptions ...callopt.Option) (r *education.GetSelectDataResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSelectData(ctx, req)
}

func (p *kEducationserviceClient) GetTeacherInfoList(ctx context.Context, req *education.GetTeacherInfoListReq, callOptions ...callopt.Option) (r *education.GetTeacherInfoListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetTeacherInfoList(ctx, req)
}

func (p *kEducationserviceClient) ImportTeacherInfo(ctx context.Context, req *education.ImportTeacherInfoReq, callOptions ...callopt.Option) (r *education.ImportTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) UpdateTeacherInfo(ctx context.Context, req *education.UpdateTeacherInfoReq, callOptions ...callopt.Option) (r *education.UpdateTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) SetTeacherInfoStatus(ctx context.Context, req *education.SetTeacherInfoStatusReq, callOptions ...callopt.Option) (r *education.SetTeacherInfoStatusResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SetTeacherInfoStatus(ctx, req)
}

func (p *kEducationserviceClient) OderTeacherInfo(ctx context.Context, req *education.OrderTeacherInfoReq, callOptions ...callopt.Option) (r *education.OrderTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.OderTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) UpdateMenu(ctx context.Context, req *education.UpdateMenuReq, callOptions ...callopt.Option) (r *education.UpdateMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateMenu(ctx, req)
}

func (p *kEducationserviceClient) DeleteMenu(ctx context.Context, req *education.DeleteMenuReq, callOptions ...callopt.Option) (r *education.DeleteMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteMenu(ctx, req)
}

func (p *kEducationserviceClient) GetToken(ctx context.Context, req *education.GetTokenReq, callOptions ...callopt.Option) (r *education.GetTokenResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetToken(ctx, req)
}

func (p *kEducationserviceClient) UpdateRole(ctx context.Context, req *education.UpdateRoleReq, callOptions ...callopt.Option) (r *education.UpdateRoleResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateRole(ctx, req)
}

func (p *kEducationserviceClient) SetRoleStatus(ctx context.Context, req *education.SetRoleStatusReq, callOptions ...callopt.Option) (r *education.SetRoleStatusResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SetRoleStatus(ctx, req)
}

func (p *kEducationserviceClient) DeleteRole(ctx context.Context, req *education.DeleteRoleReq, callOptions ...callopt.Option) (r *education.DeleteRoleResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteRole(ctx, req)
}

func (p *kEducationserviceClient) DeleteOffice(ctx context.Context, req *education.DeleteOfficeReq, callOptions ...callopt.Option) (r *education.DeleteOfficeResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteOffice(ctx, req)
}

func (p *kEducationserviceClient) UpdateOffice(ctx context.Context, req *education.UpdateOfficeReq, callOptions ...callopt.Option) (r *education.UpdateOfficeResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateOffice(ctx, req)
}

func (p *kEducationserviceClient) UpdateUser(ctx context.Context, req *education.UpdateUserReq, callOptions ...callopt.Option) (r *education.UpdateUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateUser(ctx, req)
}

func (p *kEducationserviceClient) ResetPassword(ctx context.Context, req *education.ResetPasswordReq, callOptions ...callopt.Option) (r *education.ResetPasswordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ResetPassword(ctx, req)
}

func (p *kEducationserviceClient) DeleteTeacherInfo(ctx context.Context, req *education.DeleteTeacherInfoReq, callOptions ...callopt.Option) (r *education.DeleteTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) CreateTeacherInfo(ctx context.Context, req *education.CreateTeacherInfoReq, callOptions ...callopt.Option) (r *education.CreateTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) ExportTeacherInfo(ctx context.Context, req *education.ExportTeacherInfoReq, callOptions ...callopt.Option) (r *education.ExportTeacherInfoResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportTeacherInfo(ctx, req)
}

func (p *kEducationserviceClient) GetCourseList(ctx context.Context, req *education.GetCourseListReq, callOptions ...callopt.Option) (r *education.GetCourseListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetCourseList(ctx, req)
}

func (p *kEducationserviceClient) DeleteCourse(ctx context.Context, req *education.DeleteCourseReq, callOptions ...callopt.Option) (r *education.DeleteCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteCourse(ctx, req)
}

func (p *kEducationserviceClient) ImportCourse(ctx context.Context, req *education.ImportCourseReq, callOptions ...callopt.Option) (r *education.ImportCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportCourse(ctx, req)
}

func (p *kEducationserviceClient) UpdateCourse(ctx context.Context, req *education.UpdateCourseReq, callOptions ...callopt.Option) (r *education.UpdateCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateCourse(ctx, req)
}

func (p *kEducationserviceClient) GetSelfCourseList(ctx context.Context, req *education.GetSelfCourseListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSelfCourseList(ctx, req)
}

func (p *kEducationserviceClient) GetCourseApplicationList(ctx context.Context, req *education.GetCourseApplicationListReq, callOptions ...callopt.Option) (r *education.GetCourseApplicationListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetCourseApplicationList(ctx, req)
}

func (p *kEducationserviceClient) DeleteCourseApplication(ctx context.Context, req *education.DeleteCourseApplicationReq, callOptions ...callopt.Option) (r *education.DeleteCourseApplicationResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteCourseApplication(ctx, req)
}

func (p *kEducationserviceClient) GetSelfCourseApplicationList(ctx context.Context, req *education.GetSelfCourseApplicationListReq, callOptions ...callopt.Option) (r *education.GetSelfCourseApplicationListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSelfCourseApplicationList(ctx, req)
}

func (p *kEducationserviceClient) AdjustCourseApplication(ctx context.Context, req *education.AdjustCourseApplicationReq, callOptions ...callopt.Option) (r *education.AdjustCourseApplicationResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.AdjustCourseApplication(ctx, req)
}

func (p *kEducationserviceClient) GetHolidayList(ctx context.Context, req *education.GetHolidayListReq, callOptions ...callopt.Option) (r *education.GetHolidayListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetHolidayList(ctx, req)
}

func (p *kEducationserviceClient) DeleteHoliday(ctx context.Context, req *education.DeleteHolidayReq, callOptions ...callopt.Option) (r *education.DeleteHolidayResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteHoliday(ctx, req)
}

func (p *kEducationserviceClient) CreateHoliday(ctx context.Context, req *education.CreateHolidayReq, callOptions ...callopt.Option) (r *education.CreateHolidayResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateHoliday(ctx, req)
}

func (p *kEducationserviceClient) UpdateHoliday(ctx context.Context, req *education.UpdateHolidayReq, callOptions ...callopt.Option) (r *education.UpdateHolidayResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateHoliday(ctx, req)
}

func (p *kEducationserviceClient) GetInternshipList(ctx context.Context, req *education.GetInternshipListReq, callOptions ...callopt.Option) (r *education.GetInternshipListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetInternshipList(ctx, req)
}

func (p *kEducationserviceClient) DeleteInternship(ctx context.Context, req *education.DeleteInternshipReq, callOptions ...callopt.Option) (r *education.DeleteInternshipResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteInternship(ctx, req)
}

func (p *kEducationserviceClient) UpdateInternship(ctx context.Context, req *education.UpdateInternshipReq, callOptions ...callopt.Option) (r *education.UpdateInternshipResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateInternship(ctx, req)
}

func (p *kEducationserviceClient) CreateInternship(ctx context.Context, req *education.CreateInternshipReq, callOptions ...callopt.Option) (r *education.CreateInternshipResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateInternship(ctx, req)
}

func (p *kEducationserviceClient) ImportInternship(ctx context.Context, req *education.ImportInternshipReq, callOptions ...callopt.Option) (r *education.ImportInternshipResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportInternship(ctx, req)
}

func (p *kEducationserviceClient) GetTrainingCourseList(ctx context.Context, req *education.GetTrainingCourseListReq, callOptions ...callopt.Option) (r *education.GetTrainingCourseListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetTrainingCourseList(ctx, req)
}

func (p *kEducationserviceClient) CreateTrainingCourse(ctx context.Context, req *education.CreateTrainingCourseReq, callOptions ...callopt.Option) (r *education.CreateTrainingCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateTrainingCourse(ctx, req)
}

func (p *kEducationserviceClient) DeleteTrainingCourse(ctx context.Context, req *education.DeleteTrainingCourseReq, callOptions ...callopt.Option) (r *education.DeleteTrainingCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteTrainingCourse(ctx, req)
}

func (p *kEducationserviceClient) UpdateTrainingCourse(ctx context.Context, req *education.UpdateTrainingCourseReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateTrainingCourse(ctx, req)
}

func (p *kEducationserviceClient) UpdateTrainingCourseTeacher(ctx context.Context, req *education.UpdateTrainingCourseTeacherReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseTeacherResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateTrainingCourseTeacher(ctx, req)
}

func (p *kEducationserviceClient) ImportTrainingCourse(ctx context.Context, req *education.ImportTrainingCourseReq, callOptions ...callopt.Option) (r *education.ImportTrainingCourseResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportTrainingCourse(ctx, req)
}

func (p *kEducationserviceClient) GetSelfTrainingCourseList(ctx context.Context, req *education.GetSelfTrainingCourseListReq, callOptions ...callopt.Option) (r *education.GetSelfTrainingCourseListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetSelfTrainingCourseList(ctx, req)
}

func (p *kEducationserviceClient) SyncFinalExam(ctx context.Context, req *education.SyncFinalExamReq, callOptions ...callopt.Option) (r *education.SyncFinalExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SyncFinalExam(ctx, req)
}

func (p *kEducationserviceClient) GetFinalExamList(ctx context.Context, req *education.GetFinalExamListReq, callOptions ...callopt.Option) (r *education.GetFinalExamListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetFinalExamList(ctx, req)
}

func (p *kEducationserviceClient) GetFinalExamSubjectList(ctx context.Context, req *education.GetFinalExamSubjectListReq, callOptions ...callopt.Option) (r *education.GetFinalExamSubjectListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetFinalExamSubjectList(ctx, req)
}

func (p *kEducationserviceClient) UpdateFinalExam(ctx context.Context, req *education.UpdateFinalExamReq, callOptions ...callopt.Option) (r *education.UpdateFinalExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateFinalExam(ctx, req)
}

func (p *kEducationserviceClient) ExportFinalExam(ctx context.Context, req *education.ExportFinalExamReq, callOptions ...callopt.Option) (r *education.ExportFinalExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportFinalExam(ctx, req)
}

func (p *kEducationserviceClient) CalculateFinalExamWorkload(ctx context.Context, req *education.CalculateFinalExamWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateFinalExamWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CalculateFinalExamWorkload(ctx, req)
}

func (p *kEducationserviceClient) DeleteFinalExam(ctx context.Context, req *education.DeleteFinalExamReq, callOptions ...callopt.Option) (r *education.DeleteFinalExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteFinalExam(ctx, req)
}

func (p *kEducationserviceClient) FillFinalExamPaper(ctx context.Context, req *education.FillFinalExamPaperReq, callOptions ...callopt.Option) (r *education.FillFinalExamPaperResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FillFinalExamPaper(ctx, req)
}

func (p *kEducationserviceClient) GetFinalExamFillRecordList(ctx context.Context, req *education.GetFinalExamRecordListReq, callOptions ...callopt.Option) (r *education.GetFinalExamRecordListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetFinalExamFillRecordList(ctx, req)
}

func (p *kEducationserviceClient) DeleteFinalExamRecord(ctx context.Context, req *education.DeleteFinalExamRecordReq, callOptions ...callopt.Option) (r *education.DeleteFinalExamRecordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteFinalExamRecord(ctx, req)
}

func (p *kEducationserviceClient) UpdateFinalExamRecord(ctx context.Context, req *education.UpdateFinalExamRecordReq, callOptions ...callopt.Option) (r *education.UpdateFinalExamRecordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateFinalExamRecord(ctx, req)
}

func (p *kEducationserviceClient) GetFinalExamClassList(ctx context.Context, req *education.GetFinalExamClassListReq, callOptions ...callopt.Option) (r *education.GetFinalExamClassListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetFinalExamClassList(ctx, req)
}

func (p *kEducationserviceClient) GetBeginExamList(ctx context.Context, req *education.GetBeginExamListReq, callOptions ...callopt.Option) (r *education.GetBeginExamListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetBeginExamList(ctx, req)
}

func (p *kEducationserviceClient) UpdateBeginExam(ctx context.Context, req *education.UpdateBeginExamReq, callOptions ...callopt.Option) (r *education.UpdateBeginExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateBeginExam(ctx, req)
}

func (p *kEducationserviceClient) CreateBeginExam(ctx context.Context, req *education.CreateBeginExamReq, callOptions ...callopt.Option) (r *education.CreateBeginExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateBeginExam(ctx, req)
}

func (p *kEducationserviceClient) DeleteBeginExam(ctx context.Context, req *education.DeleteBeginExamReq, callOptions ...callopt.Option) (r *education.DeleteBeginExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteBeginExam(ctx, req)
}

func (p *kEducationserviceClient) ImportBeginExam(ctx context.Context, req *education.ImportBeginExamReq, callOptions ...callopt.Option) (r *education.ImportBeginExamResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ImportBeginExam(ctx, req)
}

func (p *kEducationserviceClient) GetRoleMenu(ctx context.Context, req *education.GetRoleMenuReq, callOptions ...callopt.Option) (r *education.GetRoleMenuResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetRoleMenu(ctx, req)
}

func (p *kEducationserviceClient) UploadSign(ctx context.Context, req *education.UploadSignReq, callOptions ...callopt.Option) (r *education.UploadSignResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UploadSign(ctx, req)
}

func (p *kEducationserviceClient) GetDepartmentCourseApplyList(ctx context.Context, req *education.GetDepartmentCourseApplyListReq, callOptions ...callopt.Option) (r *education.GetDepartmentCourseApplyListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetDepartmentCourseApplyList(ctx, req)
}

func (p *kEducationserviceClient) UpdatePassword(ctx context.Context, req *education.UpdatePasswordReq, callOptions ...callopt.Option) (r *education.UpdatePasswordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdatePassword(ctx, req)
}

func (p *kEducationserviceClient) GetUserSign(ctx context.Context, req *education.GetUserSignReq, callOptions ...callopt.Option) (r *education.GetUserSignResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetUserSign(ctx, req)
}

func (p *kEducationserviceClient) ExportAllResponsibility(ctx context.Context, req *education.ExportAllResponsibilityReq, callOptions ...callopt.Option) (r *education.ExportAllResponsibilityResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportAllResponsibility(ctx, req)
}

func (p *kEducationserviceClient) GetWorkloadStatisticsRecordList(ctx context.Context, req *education.GetWorkloadStatisticsRecordListReq, callOptions ...callopt.Option) (r *education.GetWorkloadStatisticsRecordListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetWorkloadStatisticsRecordList(ctx, req)
}

func (p *kEducationserviceClient) DeleteWorkloadStatisticsRecord(ctx context.Context, req *education.DeleteWorkloadStatisticsRecordReq, callOptions ...callopt.Option) (r *education.DeleteWorkloadStatisticsRecordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteWorkloadStatisticsRecord(ctx, req)
}

func (p *kEducationserviceClient) UpdateWorkloadStatisticsRecord(ctx context.Context, req *education.UpdateWorkloadStatisticsRecordReq, callOptions ...callopt.Option) (r *education.UpdateWorkloadStatisticsRecordResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateWorkloadStatisticsRecord(ctx, req)
}

func (p *kEducationserviceClient) CalculateTheoreticalCourseWorkload(ctx context.Context, req *education.CalculateTheoreticalCourseWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateTheoreticalCourseWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CalculateTheoreticalCourseWorkload(ctx, req)
}

func (p *kEducationserviceClient) CalculateTrainingCourseWorkload(ctx context.Context, req *education.CalculateTrainingCourseWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateTrainingCourseWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CalculateTrainingCourseWorkload(ctx, req)
}

func (p *kEducationserviceClient) CalculateInternshipWorkload(ctx context.Context, req *education.CalculateInternshipWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateInternshipWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CalculateInternshipWorkload(ctx, req)
}

func (p *kEducationserviceClient) CalculateBeginExamWorkload(ctx context.Context, req *education.CalculateBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.CalculateBeginExamWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CalculateBeginExamWorkload(ctx, req)
}

func (p *kEducationserviceClient) GetWorkloadStatisticsList(ctx context.Context, req *education.GetWorkloadStatisticsListReq, callOptions ...callopt.Option) (r *education.GetWorkloadStatisticsListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetWorkloadStatisticsList(ctx, req)
}

func (p *kEducationserviceClient) DeleteWorkloadStatistics(ctx context.Context, req *education.DeleteWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.DeleteWorkloadStatisticsResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteWorkloadStatistics(ctx, req)
}

func (p *kEducationserviceClient) ExportWorkloadStatistics(ctx context.Context, req *education.ExportWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.ExportWorkloadStatisticsResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportWorkloadStatistics(ctx, req)
}

func (p *kEducationserviceClient) UpdateTheoreticalCourseWorkload(ctx context.Context, req *education.UpdateTheoreticalCourseWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateTheoreticalCourseWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateTheoreticalCourseWorkload(ctx, req)
}

func (p *kEducationserviceClient) UpdateTrainingCourseWorkload(ctx context.Context, req *education.UpdateTrainingCourseWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateTrainingCourseWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateTrainingCourseWorkload(ctx, req)
}

func (p *kEducationserviceClient) UpdateInternshipWorkload(ctx context.Context, req *education.UpdateInternshipWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateInternshipWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateInternshipWorkload(ctx, req)
}

func (p *kEducationserviceClient) UpdateBeginExamWorkload(ctx context.Context, req *education.UpdateBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.UpdateBeginExamWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateBeginExamWorkload(ctx, req)
}

func (p *kEducationserviceClient) ExportBeginExamWorkload(ctx context.Context, req *education.ExportBeginExamWorkloadReq, callOptions ...callopt.Option) (r *education.ExportBeginExamWorkloadResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ExportBeginExamWorkload(ctx, req)
}

func (p *kEducationserviceClient) CreateWorkloadStatistics(ctx context.Context, req *education.CreateWorkloadStatisticsReq, callOptions ...callopt.Option) (r *education.CreateWorkloadStatisticsResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateWorkloadStatistics(ctx, req)
}
